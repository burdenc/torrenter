version: '3'
services:
    vpn:
        image: thrnz/docker-wireguard-pia
        volumes:
            # Auth token is stored here
            - "pia:/pia"
            # If enabled, the forwarded port is dumped to /pia-shared/port.dat for potential use in other containers
            - "pia-shared:/pia-shared"
        cap_add:
            - NET_ADMIN
            # SYS_MODULE might not be needed with a 5.6+ kernel?
            - SYS_MODULE
        # Mounting the tun device may be necessary for userspace implementations
        #devices:
        #  - /dev/net/tun:/dev/net/tun
        ports:
          - 9091:9091
          - 51413:51413
          - 51413:51413/udp
        environment:
            - LOCAL_NETWORK=192.168.1.0/24
            - LOC=ca_toronto
            # TODO: Set PIA user/pass
            - USER=<PIA USERNAME>
            - PASS=<PIA PASSWORD>
            #- KEEPALIVE=25
            #- VPNDNS=8.8.8.8,8.8.4.4
            - PORT_FORWARDING=1
            - WG_USERSPACE=0
        sysctls:
            # wg-quick fails to set this without --privileged, so set it here instead if needed
            - net.ipv4.conf.all.src_valid_mark=1
            # May as well disable ipv6. Should be blocked anyway.
            - net.ipv6.conf.default.disable_ipv6=1
            - net.ipv6.conf.all.disable_ipv6=1
            - net.ipv6.conf.lo.disable_ipv6=1
        # The container has no recovery logic. Use a healthcheck to catch disconnects.
        healthcheck:
            test: ping -c 1 www.google.com || exit 1
            interval: 30s
            timeout: 10s
            retries: 3

    transmission:
        image: ghcr.io/linuxserver/transmission
        container_name: transmission
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=Europe/London
        volumes:
          - ./transmission_config:/config
          # TODO: Map downloads folders
          #- <path_to_storage>:/downloads
        restart: unless-stopped
        network_mode: "service:vpn"

    port_forward:
        build: ./port_forward
        environment:
          # TODO: Have these match your transmission config
          - TRANSMISSION_PORT=<TRANSMISSION_PORT>
          - TRANSMISSION_USER=<TRANSMISSION_USERNAME>
          - TRANSMISSION_PASS=<TRANSMISSION_PASSWORD>
        volumes:
          - "pia-shared:/pia-shared"
        restart: unless-stopped
        network_mode: "service:vpn"
        depends_on:
                - vpn
                - transmission
  
volumes:
  pia:
  pia-shared:
